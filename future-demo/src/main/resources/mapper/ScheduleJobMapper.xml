<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.peterchenhdu.future.demo.dao.jobdemo.ScheduleJobMapper">
    <resultMap id="BaseResultMap" type="com.github.peterchenhdu.future.demo.model.jobdemo.ScheduleJob">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="class_name" jdbcType="VARCHAR" property="className"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="job_group" jdbcType="VARCHAR" property="jobGroup"/>
        <result column="job_name" jdbcType="VARCHAR" property="jobName"/>
        <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime"/>
        <result column="trigger_group" jdbcType="VARCHAR" property="triggerGroup"/>
        <result column="trigger_name" jdbcType="VARCHAR" property="triggerName"/>
        <result column="pause" jdbcType="BIT" property="pause"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, class_name, create_time, cron_expression, description, job_group, job_name, last_update_time,
    trigger_group, trigger_name, pause
  </sql>
    <select id="selectByExample" parameterType="com.github.peterchenhdu.future.demo.model.jobdemo.ScheduleJobExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from jobdemo.schedule_job
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from jobdemo.schedule_job
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from jobdemo.schedule_job
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.github.peterchenhdu.future.demo.model.jobdemo.ScheduleJobExample">
        delete from jobdemo.schedule_job
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.github.peterchenhdu.future.demo.model.jobdemo.ScheduleJob">
        insert into jobdemo.schedule_job (id, class_name, create_time,
        cron_expression, description, job_group,
        job_name, last_update_time, trigger_group,
        trigger_name, pause)
        values (#{id,jdbcType=BIGINT}, #{className,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{cronExpression,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR},
        #{jobName,jdbcType=VARCHAR}, #{lastUpdateTime,jdbcType=TIMESTAMP}, #{triggerGroup,jdbcType=VARCHAR},
        #{triggerName,jdbcType=VARCHAR}, #{pause,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.github.peterchenhdu.future.demo.model.jobdemo.ScheduleJob">
        insert into jobdemo.schedule_job
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="className != null">
                class_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="cronExpression != null">
                cron_expression,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="jobGroup != null">
                job_group,
            </if>
            <if test="jobName != null">
                job_name,
            </if>
            <if test="lastUpdateTime != null">
                last_update_time,
            </if>
            <if test="triggerGroup != null">
                trigger_group,
            </if>
            <if test="triggerName != null">
                trigger_name,
            </if>
            <if test="pause != null">
                pause,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="className != null">
                #{className,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cronExpression != null">
                #{cronExpression,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="jobGroup != null">
                #{jobGroup,jdbcType=VARCHAR},
            </if>
            <if test="jobName != null">
                #{jobName,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateTime != null">
                #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="triggerGroup != null">
                #{triggerGroup,jdbcType=VARCHAR},
            </if>
            <if test="triggerName != null">
                #{triggerName,jdbcType=VARCHAR},
            </if>
            <if test="pause != null">
                #{pause,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.github.peterchenhdu.future.demo.model.jobdemo.ScheduleJobExample"
            resultType="java.lang.Long">
        select count(*) from jobdemo.schedule_job
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update jobdemo.schedule_job
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.className != null">
                class_name = #{record.className,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.cronExpression != null">
                cron_expression = #{record.cronExpression,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.jobGroup != null">
                job_group = #{record.jobGroup,jdbcType=VARCHAR},
            </if>
            <if test="record.jobName != null">
                job_name = #{record.jobName,jdbcType=VARCHAR},
            </if>
            <if test="record.lastUpdateTime != null">
                last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.triggerGroup != null">
                trigger_group = #{record.triggerGroup,jdbcType=VARCHAR},
            </if>
            <if test="record.triggerName != null">
                trigger_name = #{record.triggerName,jdbcType=VARCHAR},
            </if>
            <if test="record.pause != null">
                pause = #{record.pause,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update jobdemo.schedule_job
        set id = #{record.id,jdbcType=BIGINT},
        class_name = #{record.className,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        cron_expression = #{record.cronExpression,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        job_group = #{record.jobGroup,jdbcType=VARCHAR},
        job_name = #{record.jobName,jdbcType=VARCHAR},
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
        trigger_group = #{record.triggerGroup,jdbcType=VARCHAR},
        trigger_name = #{record.triggerName,jdbcType=VARCHAR},
        pause = #{record.pause,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.github.peterchenhdu.future.demo.model.jobdemo.ScheduleJob">
        update jobdemo.schedule_job
        <set>
            <if test="className != null">
                class_name = #{className,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cronExpression != null">
                cron_expression = #{cronExpression,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="jobGroup != null">
                job_group = #{jobGroup,jdbcType=VARCHAR},
            </if>
            <if test="jobName != null">
                job_name = #{jobName,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateTime != null">
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="triggerGroup != null">
                trigger_group = #{triggerGroup,jdbcType=VARCHAR},
            </if>
            <if test="triggerName != null">
                trigger_name = #{triggerName,jdbcType=VARCHAR},
            </if>
            <if test="pause != null">
                pause = #{pause,jdbcType=BIT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.github.peterchenhdu.future.demo.model.jobdemo.ScheduleJob">
        update jobdemo.schedule_job
        set class_name = #{className,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        cron_expression = #{cronExpression,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        job_group = #{jobGroup,jdbcType=VARCHAR},
        job_name = #{jobName,jdbcType=VARCHAR},
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
        trigger_group = #{triggerGroup,jdbcType=VARCHAR},
        trigger_name = #{triggerName,jdbcType=VARCHAR},
        pause = #{pause,jdbcType=BIT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>